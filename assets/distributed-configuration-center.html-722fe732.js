const e=JSON.parse('{"key":"v-ae9d50b4","path":"/distributed-system/distributed-configuration-center.html","title":"分布式配置中心详解","lang":"zh-CN","frontmatter":{"title":"分布式配置中心详解","category":"分布式","icon":"configuration","description":"为什么要用配置中心？ 微服务下，业务的发展一般会导致服务数量的增加，进而导致程序配置（服务地址、数据库参数等等）增多。传统的配置文件的方式已经无法满足当前需求，主要有下面几点原因： 安全性得不到保障：配置放在代码库中容易泄露。 时效性不行：修改配置需要重启服务才能生效。 不支持权限控制 ：没有对配置的修改、发布等操作进行严格的权限控制。 不支持配置集中管理 ： 配置文件过于分散，不方便管理。 ...... 另外，配置中心通常会自带版本跟踪，会记录配置的修改记录，记录的内容包括修改人、修改时间、修改内容等等。","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/distributed-system/distributed-configuration-center.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"分布式配置中心详解"}],["meta",{"property":"og:description","content":"为什么要用配置中心？ 微服务下，业务的发展一般会导致服务数量的增加，进而导致程序配置（服务地址、数据库参数等等）增多。传统的配置文件的方式已经无法满足当前需求，主要有下面几点原因： 安全性得不到保障：配置放在代码库中容易泄露。 时效性不行：修改配置需要重启服务才能生效。 不支持权限控制 ：没有对配置的修改、发布等操作进行严格的权限控制。 不支持配置集中管理 ： 配置文件过于分散，不方便管理。 ...... 另外，配置中心通常会自带版本跟踪，会记录配置的修改记录，记录的内容包括修改人、修改时间、修改内容等等。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-21T15:29:46.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-21T15:29:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分布式配置中心详解\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-21T15:29:46.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"为什么要用配置中心？","slug":"为什么要用配置中心","link":"#为什么要用配置中心","children":[]},{"level":2,"title":"常见的配置中心有哪些？","slug":"常见的配置中心有哪些","link":"#常见的配置中心有哪些","children":[]},{"level":2,"title":"Apollo vs Nacos vs Spring Cloud Config","slug":"apollo-vs-nacos-vs-spring-cloud-config","link":"#apollo-vs-nacos-vs-spring-cloud-config","children":[]},{"level":2,"title":"以 Apollo 为例介绍配置中心的设计","slug":"以-apollo-为例介绍配置中心的设计","link":"#以-apollo-为例介绍配置中心的设计","children":[{"level":3,"title":"Apollo 介绍","slug":"apollo-介绍","link":"#apollo-介绍","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1667489612000,"updatedTime":1679412586000,"contributors":[{"name":"guide","email":"koushuangbwcx@163.com","commits":2},{"name":"hezongkui","email":"zongkuihe@gmail.com","commits":2},{"name":"Guide","email":"koushuangbwcx@163.com","commits":1}]},"readingTime":{"minutes":8.15,"words":2446},"filePathRelative":"distributed-system/distributed-configuration-center.md","localizedDate":"2022年11月3日","excerpt":"<h2> 为什么要用配置中心？</h2>\\n<p>微服务下，业务的发展一般会导致服务数量的增加，进而导致程序配置（服务地址、数据库参数等等）增多。传统的配置文件的方式已经无法满足当前需求，主要有下面几点原因：</p>\\n<ul>\\n<li>安全性得不到保障：配置放在代码库中容易泄露。</li>\\n<li>时效性不行：修改配置需要重启服务才能生效。</li>\\n<li>不支持权限控制 ：没有对配置的修改、发布等操作进行严格的权限控制。</li>\\n<li>不支持配置集中管理 ： 配置文件过于分散，不方便管理。</li>\\n<li>......</li>\\n</ul>\\n<p>另外，配置中心通常会自带版本跟踪，会记录配置的修改记录，记录的内容包括修改人、修改时间、修改内容等等。</p>","copyright":{},"autoDesc":true}');export{e as data};
