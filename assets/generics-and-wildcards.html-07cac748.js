const e=JSON.parse('{"key":"v-beaf9afc","path":"/java/basis/generics-and-wildcards.html","title":"泛型&通配符详解","lang":"zh-CN","frontmatter":{"title":"泛型&通配符详解","category":"Java","tag":["Java基础"],"description":"通配符 什么是通配符？有什么作用？ 泛型类型是固定的，某些场景下使用起来不太灵活，于是，通配符就来了！通配符可以允许类型参数变化，用来解决泛型无法协变的问题。 举个例子： 通配符 ？和常用的泛型 T 之间有什么区别？ T 可以用于声明变量或常量而 ? 不行。 T 一般用于声明泛型类或方法，通配符 ? 一般用于泛型方法的调用代码和形参。 T 在编译期会被擦除为限定类型或 Object，通配符用于捕获具体类型。","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/java/basis/generics-and-wildcards.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"泛型&通配符详解"}],["meta",{"property":"og:description","content":"通配符 什么是通配符？有什么作用？ 泛型类型是固定的，某些场景下使用起来不太灵活，于是，通配符就来了！通配符可以允许类型参数变化，用来解决泛型无法协变的问题。 举个例子： 通配符 ？和常用的泛型 T 之间有什么区别？ T 可以用于声明变量或常量而 ? 不行。 T 一般用于声明泛型类或方法，通配符 ? 一般用于泛型方法的调用代码和形参。 T 在编译期会被擦除为限定类型或 Object，通配符用于捕获具体类型。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-19T08:31:34.000Z"}],["meta",{"property":"article:tag","content":"Java基础"}],["meta",{"property":"article:modified_time","content":"2023-03-19T08:31:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"泛型&通配符详解\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-19T08:31:34.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"通配符","slug":"通配符","link":"#通配符","children":[{"level":3,"title":"什么是通配符？有什么作用？","slug":"什么是通配符-有什么作用","link":"#什么是通配符-有什么作用","children":[]},{"level":3,"title":"通配符 ？和常用的泛型 T 之间有什么区别？","slug":"通配符-和常用的泛型-t-之间有什么区别","link":"#通配符-和常用的泛型-t-之间有什么区别","children":[]},{"level":3,"title":"什么是无界通配符？","slug":"什么是无界通配符","link":"#什么是无界通配符","children":[]},{"level":3,"title":"什么是上边界通配符？什么是下边界通配符？","slug":"什么是上边界通配符-什么是下边界通配符","link":"#什么是上边界通配符-什么是下边界通配符","children":[]},{"level":3,"title":"以下代码是否能编译，为什么？","slug":"以下代码是否能编译-为什么","link":"#以下代码是否能编译-为什么","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1655097266000,"updatedTime":1679214694000,"contributors":[{"name":"guide","email":"koushuangbwcx@163.com","commits":5},{"name":"hezongkui","email":"zongkuihe@gmail.com","commits":1}]},"readingTime":{"minutes":3.08,"words":923},"filePathRelative":"java/basis/generics-and-wildcards.md","localizedDate":"2022年6月13日","excerpt":"<h2> 通配符</h2>\\n<h3> 什么是通配符？有什么作用？</h3>\\n<p>泛型类型是固定的，某些场景下使用起来不太灵活，于是，通配符就来了！通配符可以允许类型参数变化，用来解决泛型无法协变的问题。</p>\\n<p>举个例子：</p>\\n<h3> 通配符 ？和常用的泛型 T 之间有什么区别？</h3>\\n<ul>\\n<li>\\n<p>T 可以用于声明变量或常量而 ? 不行。</p>\\n</li>\\n<li>\\n<p>T 一般用于声明泛型类或方法，通配符 ? 一般用于泛型方法的调用代码和形参。</p>\\n</li>\\n<li>\\n<p>T 在编译期会被擦除为限定类型或 Object，通配符用于捕获具体类型。</p>\\n</li>\\n</ul>","copyright":{},"autoDesc":true}');export{e as data};
