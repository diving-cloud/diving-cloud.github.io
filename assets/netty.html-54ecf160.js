const e=JSON.parse('{"key":"v-16b8b098","path":"/system-design/framework/netty.html","title":"Netty常见面试题总结(付费)","lang":"zh-CN","frontmatter":{"title":"Netty常见面试题总结(付费)","category":"框架","icon":"network","description":"Netty 常见面试题总结 很多小伙伴搞不清楚为啥要学习 Netty ，正式今天这篇文章开始之前，简单说一下自己的看法： Netty 基于 NIO （NIO 是一种同步非阻塞的 I/O 模型，在 Java 1.4 中引入了 NIO），使用 Netty 可以极大地简化 TCP 和 UDP 套接字服务器等网络编程，并且性能以及安全性等很多方面都非常优秀。 我们平常经常接触的 Dubbo、RocketMQ、Elasticsearch、gRPC、Spark 等等热门开源项目都用到了 Netty。 大部分微服务框架底层涉及到网络通信的部分都是基于 Netty 来做的，比如说 Spring Cloud 生态系统中的网关 Spring Cloud Gateway。","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/system-design/framework/netty.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Netty常见面试题总结(付费)"}],["meta",{"property":"og:description","content":"Netty 常见面试题总结 很多小伙伴搞不清楚为啥要学习 Netty ，正式今天这篇文章开始之前，简单说一下自己的看法： Netty 基于 NIO （NIO 是一种同步非阻塞的 I/O 模型，在 Java 1.4 中引入了 NIO），使用 Netty 可以极大地简化 TCP 和 UDP 套接字服务器等网络编程，并且性能以及安全性等很多方面都非常优秀。 我们平常经常接触的 Dubbo、RocketMQ、Elasticsearch、gRPC、Spark 等等热门开源项目都用到了 Netty。 大部分微服务框架底层涉及到网络通信的部分都是基于 Netty 来做的，比如说 Spring Cloud 生态系统中的网关 Spring Cloud Gateway。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-13T15:19:19.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-13T15:19:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Netty常见面试题总结(付费)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-13T15:19:19.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"BIO,NIO 和 AIO 有啥区别？","slug":"bio-nio-和-aio-有啥区别","link":"#bio-nio-和-aio-有啥区别","children":[]},{"level":2,"title":"Netty 是什么？","slug":"netty-是什么","link":"#netty-是什么","children":[]},{"level":2,"title":"为啥不直接用 NIO 呢?","slug":"为啥不直接用-nio-呢","link":"#为啥不直接用-nio-呢","children":[]},{"level":2,"title":"为什么要用 Netty？","slug":"为什么要用-netty","link":"#为什么要用-netty","children":[]},{"level":2,"title":"Netty 应用场景了解么？","slug":"netty-应用场景了解么","link":"#netty-应用场景了解么","children":[]},{"level":2,"title":"哪些开源项目用到了 Netty?","slug":"哪些开源项目用到了-netty","link":"#哪些开源项目用到了-netty","children":[]},{"level":2,"title":"介绍一下 Netty 的核心组件？","slug":"介绍一下-netty-的核心组件","link":"#介绍一下-netty-的核心组件","children":[{"level":3,"title":"Bytebuf（字节容器）","slug":"bytebuf-字节容器","link":"#bytebuf-字节容器","children":[]},{"level":3,"title":"Bootstrap 和 ServerBootstrap（启动引导类）","slug":"bootstrap-和-serverbootstrap-启动引导类","link":"#bootstrap-和-serverbootstrap-启动引导类","children":[]},{"level":3,"title":"Channel（网络操作抽象类）","slug":"channel-网络操作抽象类","link":"#channel-网络操作抽象类","children":[]},{"level":3,"title":"EventLoop（事件循环）","slug":"eventloop-事件循环","link":"#eventloop-事件循环","children":[]},{"level":3,"title":"ChannelHandler（消息处理器） 和 ChannelPipeline（ChannelHandler 对象链表）","slug":"channelhandler-消息处理器-和-channelpipeline-channelhandler-对象链表","link":"#channelhandler-消息处理器-和-channelpipeline-channelhandler-对象链表","children":[]},{"level":3,"title":"ChannelFuture（操作执行结果）","slug":"channelfuture-操作执行结果","link":"#channelfuture-操作执行结果","children":[]}]},{"level":2,"title":"NioEventLoopGroup 默认的构造函数会起多少线程？","slug":"nioeventloopgroup-默认的构造函数会起多少线程","link":"#nioeventloopgroup-默认的构造函数会起多少线程","children":[]},{"level":2,"title":"Reactor 线程模型","slug":"reactor-线程模型","link":"#reactor-线程模型","children":[{"level":3,"title":"单线程 Reactor","slug":"单线程-reactor","link":"#单线程-reactor","children":[]},{"level":3,"title":"多线程 Reactor","slug":"多线程-reactor","link":"#多线程-reactor","children":[]},{"level":3,"title":"主从多线程 Reactor","slug":"主从多线程-reactor","link":"#主从多线程-reactor","children":[]}]},{"level":2,"title":"Netty 线程模型了解么？","slug":"netty-线程模型了解么","link":"#netty-线程模型了解么","children":[{"level":3,"title":"单线程模型","slug":"单线程模型","link":"#单线程模型","children":[]},{"level":3,"title":"多线程模型","slug":"多线程模型","link":"#多线程模型","children":[]},{"level":3,"title":"主从多线程模型","slug":"主从多线程模型","link":"#主从多线程模型","children":[]}]},{"level":2,"title":"Netty 服务端和客户端的启动过程了解么？","slug":"netty-服务端和客户端的启动过程了解么","link":"#netty-服务端和客户端的启动过程了解么","children":[{"level":3,"title":"服务端","slug":"服务端","link":"#服务端","children":[]},{"level":3,"title":"客户端","slug":"客户端","link":"#客户端","children":[]}]},{"level":2,"title":"什么是 TCP 粘包/拆包?有什么解决办法呢？","slug":"什么是-tcp-粘包-拆包-有什么解决办法呢","link":"#什么是-tcp-粘包-拆包-有什么解决办法呢","children":[]},{"level":2,"title":"Netty 长连接、心跳机制了解么？","slug":"netty-长连接、心跳机制了解么","link":"#netty-长连接、心跳机制了解么","children":[]},{"level":2,"title":"Netty 的零拷贝了解么？","slug":"netty-的零拷贝了解么","link":"#netty-的零拷贝了解么","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1636454878000,"updatedTime":1678720759000,"contributors":[{"name":"guide","email":"koushuangbwcx@163.com","commits":19},{"name":"Guide","email":"koushuangbwcx@163.com","commits":1},{"name":"diving-cloud","email":"43922483+diving-cloud@users.noreply.github.com","commits":1},{"name":"hezongkui","email":"zongkuihe@gmail.com","commits":1}]},"readingTime":{"minutes":25.07,"words":7522},"filePathRelative":"system-design/framework/netty.md","localizedDate":"2021年11月9日","excerpt":"<h1> Netty 常见面试题总结</h1>\\n<p>很多小伙伴搞不清楚为啥要学习 Netty ，正式今天这篇文章开始之前，简单说一下自己的看法：</p>\\n<ul>\\n<li>Netty 基于 NIO （NIO 是一种同步非阻塞的 I/O 模型，在 Java 1.4 中引入了 NIO），使用 Netty 可以极大地简化 TCP 和 UDP 套接字服务器等网络编程，并且性能以及安全性等很多方面都非常优秀。</li>\\n<li>我们平常经常接触的 Dubbo、RocketMQ、Elasticsearch、gRPC、Spark 等等热门开源项目都用到了 Netty。</li>\\n<li>大部分微服务框架底层涉及到网络通信的部分都是基于 Netty 来做的，比如说 Spring Cloud 生态系统中的网关 Spring Cloud Gateway。</li>\\n</ul>","copyright":{},"autoDesc":true}');export{e as data};
